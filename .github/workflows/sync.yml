name: Synchronization Job

# Controls when the workflow will run
on:
  push:
    branches:
      - main
  schedule:
    - cron:  '*/5 * * * *' 

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  # AWS S3 Credentials
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

  # Elasticsearch Configuration
  ES_ALIAS: ${{ secrets.ES_ALIAS }}
  ES_HOST: ${{ secrets.ES_HOST }}
  ES_TIMEOUT: ${{ secrets.ES_TIMEOUT }}

  # EVE Swagger Interface Configuration
  ESI_CLIENT_ID: ${{ secrets.ESI_CLIENT_ID }}
  ESI_REFRESH_TOKEN: ${{ secrets.ESI_REFRESH_TOKEN }}
  ESI_SECRET_KEY: ${{ secrets.ESI_SECRET_KEY }}

jobs:
  sync-data:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --with dev

    - name: Running Sync
      run: poetry run python ./app.py